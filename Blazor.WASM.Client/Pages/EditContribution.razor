@page "/contributions/{Id:int}"
@using Blazor.WASM.Client.Utils

@if (_contribution != null)
{
    <EditForm @ref="_form" Model="_contribution">
        <div class="mb-12">
            <MudPaper Class="pa-4 mb-4 mud-theme-secondary" Elevation="3">
                Input Feld: Hier wird das ShouldRender überschrieben. Ist das Prevent-Rendering aktiviert,
                wird die Komponente nur dann gerendert, sobald sich der wert ändert.
            </MudPaper>
            <CustomInputText @bind-Value="_contribution.Title" PreventRendering="_preventRendering"></CustomInputText>
        </div>
        <div class="mb-12">
            <MudPaper Class="pa-4 mb-4 mud-theme-secondary" Elevation="3">
                Input Feld: Hier wird das IHandledEvent implementiert. Ist das Prevent-Rendering aktiviert,
                wird die Komponente nur dann gerendert, sobald:
                <ul style="list-style: inside">
                    <li>der Wert sich ändert.</li>
                    <li>oder das Rendern von einer anderen Komponente getriggert wird.</li>
                </ul>
            </MudPaper>
            <HandleEventInputText @bind-Value="_contribution.AdditionalInfo" PreventRendering="_preventRendering"></HandleEventInputText>
        </div>
        <div class="mb-12">
            <MudPaper Class="pa-4 mb-4 mud-theme-secondary" Elevation="3">
                Textarea: Hier wird das mit Hilfe von JavaScript das oninput Event erst dann getriggert, sobald aufgehört wird zu schreiben.
                Wird das Event geworfen, wird die Komponente neu gerendert. Zusätzlich kann hier auch das ShouldRender überschreiben werden,
                um die Komponente erst dann zu rendern sobald sich der Wert ändert.
            </MudPaper>
            <DebounceTextArea @bind-Value="_contribution.Abstract" PreventRendering="_preventRendering"></DebounceTextArea>
        </div>
    </EditForm>
}
<div class="action">
    @if (_preventRendering)
    {
        <MudButton OnClick="TriggerRendering"
                   Target="_blank"
                   Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.Edit"
                   Color="Color.Secondary">
            Trigger Re-Rendering
        </MudButton>
        <MudButton OnClick="EventUtil.AsNonRenderingEventHandler(TogglePreventRendering)"
                   Target="_blank"
                   Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.Power"
                   Color="Color.Secondary">
            Disable Prevent-Rendering
        </MudButton>
    }
    else
    {
        <MudButton OnClick="TriggerRendering"
                   Target="_blank"
                   Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.Edit"
                   Color="Color.Primary">
            Trigger Re-Rendering
        </MudButton>
        <MudButton OnClick="TogglePreventRendering"
                   Target="_blank"
                   Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.PowerOff"
                   Color="Color.Primary">
            Enable Prevent-Rendering
        </MudButton>
    }
</div>